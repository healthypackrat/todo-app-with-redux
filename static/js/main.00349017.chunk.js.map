{"version":3,"sources":["constants.js","redux/reducers/visibilityFilter.js","redux/actionTypes.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","redux/actions.js","components/AddTodo.js","components/Todo.js","redux/selectors.js","components/TodoList.js","components/VisibilityFilters.js","index.js","TodoApp.js"],"names":["VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","initialState","visibilityFilter","state","arguments","length","undefined","action","type","payload","filter","allIds","byIds","combineReducers","todos","_action$payload","id","content","Object","objectSpread","concat","toConsumableArray","defineProperty","completed","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","nextTodoId","AddTodo","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateInput","input","setState","handleAddTodo","addTodo","_this2","react_default","a","createElement","onChange","e","target","value","className","onClick","React","Component","connect","toggleTodo","_ref","todo","cx","getTodosState","store","getTodos","getTodoList","map","getTodoById","allTodos","getTodosByVisibilityFilter","index","components_Todo","key","activeFilter","setFilter","keys","filterKey","currentFilter","rootElement","document","getElementById","ReactDOM","render","es","components_AddTodo","components_TodoList","components_VisibilityFilters"],"mappings":"2MAAaA,EAAqB,CAChCC,IAAK,MACLC,UAAW,YACXC,WAAY,cCARC,EAAeJ,EAAmBC,IAazBI,EAXU,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBH,EAAcM,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzD,OAAQC,EAAOC,MACb,ICLsB,aDMpB,OAAOD,EAAOE,QAAQC,OAExB,QACE,OAAOP,0BETPF,EAAe,CACnBU,OAAQ,GACRC,MAAO,ICAMC,cAAgB,CAAEC,MDGlB,WAAuC,IAA9BX,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBH,EAAcM,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOC,MACb,IDToB,WCSL,IAAAO,EACWR,EAAOE,QAAvBO,EADKD,EACLC,GAAIC,EADCF,EACDE,QACZ,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFf,EADL,CAEEQ,OAAM,GAAAS,OAAAF,OAAAG,EAAA,EAAAH,CAAMf,EAAMQ,QAAZ,CAAoBK,IAC1BJ,MAAMM,OAAAC,EAAA,EAAAD,CAAA,GACDf,EAAMS,MADNM,OAAAI,EAAA,EAAAJ,CAAA,GAEFF,EAAK,CACJC,UACAM,WAAW,OAKnB,IDtBuB,cCsBL,IACRP,EAAOT,EAAOE,QAAdO,GACR,OAAOE,OAAAC,EAAA,EAAAD,CAAA,GACFf,EADL,CAEES,MAAMM,OAAAC,EAAA,EAAAD,CAAA,GACDf,EAAMS,MADNM,OAAAI,EAAA,EAAAJ,CAAA,GAEFF,EAFEE,OAAAC,EAAA,EAAAD,CAAA,GAGEf,EAAMS,MAAMI,GAHd,CAIDO,WAAYpB,EAAMS,MAAMI,GAAIO,gBAKpC,QACE,OAAOpB,ICjC2BD,qBCDzBsB,cACbC,EACAC,OAAOC,8BAAgCD,OAAOC,wECH5CC,EAAa,ECEXC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAJ,IACjBE,EAAAb,OAAAgB,EAAA,EAAAhB,CAAAe,KAAAf,OAAAiB,EAAA,EAAAjB,CAAAW,GAAAO,KAAAH,KAAMH,KAIRO,YAAc,SAAAC,GACZP,EAAKQ,SAAS,CAAED,WANCP,EASnBS,cAAgB,WACdT,EAAKD,MAAMW,QAAQV,EAAK5B,MAAMmC,OAC9BP,EAAKQ,SAAS,CAAED,MAAO,MATvBP,EAAK5B,MAAQ,CAAEmC,MAAO,IAFLP,wEAcV,IAAAW,EAAAT,KACP,OACEU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEC,SAAU,SAAAC,GAAC,OAAIL,EAAKL,YAAYU,EAAEC,OAAOC,QACzCA,MAAOhB,KAAK9B,MAAMmC,QAEpBK,EAAAC,EAAAC,cAAA,UAAQK,UAAU,WAAWC,QAASlB,KAAKO,eAA3C,oBAtBcY,IAAMC,WA8BbC,cACb,KACA,CAAEb,QDhCmB,SAAAxB,GAAO,MAAK,CACjCT,KJLsB,WIMtBC,QAAS,CACPO,KAAMY,EACNX,cC0BWqC,CAGbzB,mBCjBayB,cACb,KACA,CAAEC,WFVsB,SAAAvC,GAAE,MAAK,CAC/BR,KJZyB,cIazBC,QAAS,CAAEO,SEMEsC,CAfF,SAAAE,GAAA,IAAGC,EAAHD,EAAGC,KAAMF,EAATC,EAASD,WAAT,OACXZ,EAAAC,EAAAC,cAAA,MAAIK,UAAU,YAAYC,QAAS,kBAAMI,EAAWE,EAAKzC,MACtDyC,GAAQA,EAAKlC,UAAY,eAAO,eAAM,IACvCoB,EAAAC,EAAAC,cAAA,QACEK,UAAWQ,IACT,kBACAD,GAAQA,EAAKlC,WAAa,+BAG3BkC,EAAKxC,YCZC0C,EAAgB,SAAAC,GAAK,OAAIA,EAAM9C,OAY/B+C,EAAW,SAAAD,GAAK,OAVF,SAAAA,GAAK,OAC9BD,EAAcC,GAASD,EAAcC,GAAOjD,OAAS,GAUrDmD,CAAYF,GAAOG,IAAI,SAAA/C,GAAE,OARA,SAAC4C,EAAO5C,GAAR,OACzB2C,EAAcC,GAAd1C,OAAAC,EAAA,EAAAD,CAAA,GAA4ByC,EAAcC,GAAOhD,MAAMI,GAAvD,CAA4DA,OAAO,GAOtCgD,CAAYJ,EAAO5C,MC0BnCsC,cAfS,SAAAnD,GAGtB,MAAO,CAAEW,MDZ+B,SAAC8C,EAAO1D,GAChD,IAAM+D,EAAWJ,EAASD,GAC1B,OAAQ1D,GACN,KAAKL,EAAmBE,UACtB,OAAOkE,EAASvD,OAAO,SAAA+C,GAAI,OAAIA,EAAKlC,YACtC,KAAK1B,EAAmBG,WACtB,OAAOiE,EAASvD,OAAO,SAAA+C,GAAI,OAAKA,EAAKlC,YACvC,KAAK1B,EAAmBC,IACxB,QACE,OAAOmE,GCEGC,CAA2B/D,EADZA,EAArBD,oBAcKoD,CAlCE,SAAAE,GAAA,IAAG1C,EAAH0C,EAAG1C,MAAH,OACf6B,EAAAC,EAAAC,cAAA,MAAIK,UAAU,aACXpC,GAASA,EAAMT,OACZS,EAAMiD,IAAI,SAACN,EAAMU,GACf,OAAOxB,EAAAC,EAAAC,cAACuB,EAAD,CAAMC,IAAG,QAAAjD,OAAUqC,EAAKzC,IAAMyC,KAAMA,MAE7C,oBCqBOH,cAJS,SAAAnD,GACtB,MAAO,CAAEmE,aAAcnE,EAAMD,mBAK7B,CAAEqE,ULnBqB,SAAA7D,GAAM,MAAK,CAAEF,KJfZ,aIe8BC,QAAS,CAAEC,aKiBpD4C,CA5BW,SAAAE,GAAiC,IAA9Bc,EAA8Bd,EAA9Bc,aAAcC,EAAgBf,EAAhBe,UACzC,OACE5B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,sBACZhC,OAAOsD,KAAK3E,GAAoBkE,IAAI,SAAAU,GACnC,IAAMC,EAAgB7E,EAAmB4E,GACzC,OACE9B,EAAAC,EAAAC,cAAA,QACEwB,IAAG,qBAAAjD,OAAuBsD,GAC1BxB,UAAWQ,IACT,SACAgB,IAAkBJ,GAAgB,kBAEpCnB,QAAS,WACPoB,EAAUG,KAGXA,cCdb,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAUpB,MAAOA,GACfjB,EAAAC,EAAAC,cCLW,WACb,OACEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACsC,EAAD,QDDF,OAEFR","file":"static/js/main.00349017.chunk.js","sourcesContent":["export const VISIBILITY_FILTERS = {\n  ALL: \"all\",\n  COMPLETED: \"completed\",\n  INCOMPLETE: \"incomplete\"\n};\n","import { SET_FILTER } from \"../actionTypes\";\nimport { VISIBILITY_FILTERS } from \"../../constants\";\n\nconst initialState = VISIBILITY_FILTERS.ALL;\n\nconst visibilityFilter = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTER: {\n      return action.payload.filter;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default visibilityFilter;\n","export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const SET_FILTER = \"SET_FILTER\";\n","import { ADD_TODO, TOGGLE_TODO } from \"../actionTypes\";\n\nconst initialState = {\n  allIds: [],\n  byIds: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      const { id, content } = action.payload;\n      return {\n        ...state,\n        allIds: [...state.allIds, id],\n        byIds: {\n          ...state.byIds,\n          [id]: {\n            content,\n            completed: false\n          }\n        }\n      };\n    }\n    case TOGGLE_TODO: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        byIds: {\n          ...state.byIds,\n          [id]: {\n            ...state.byIds[id],\n            completed: !state.byIds[id].completed\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport visibilityFilter from \"./visibilityFilter\";\nimport todos from \"./todos\";\n\nexport default combineReducers({ todos, visibilityFilter });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { ADD_TODO, TOGGLE_TODO, SET_FILTER } from \"./actionTypes\";\n\nlet nextTodoId = 0;\n\nexport const addTodo = content => ({\n  type: ADD_TODO,\n  payload: {\n    id: ++nextTodoId,\n    content\n  }\n});\n\nexport const toggleTodo = id => ({\n  type: TOGGLE_TODO,\n  payload: { id }\n});\n\nexport const setFilter = filter => ({ type: SET_FILTER, payload: { filter } });\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../redux/actions\";\n\nclass AddTodo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { input: \"\" };\n  }\n\n  updateInput = input => {\n    this.setState({ input });\n  };\n\n  handleAddTodo = () => {\n    this.props.addTodo(this.state.input);\n    this.setState({ input: \"\" });\n  };\n\n  render() {\n    return (\n      <div>\n        <input\n          onChange={e => this.updateInput(e.target.value)}\n          value={this.state.input}\n        />\n        <button className=\"add-todo\" onClick={this.handleAddTodo}>\n          Add Todo\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addTodo }\n)(AddTodo);\n// export default AddTodo;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport cx from \"classnames\";\nimport { toggleTodo } from \"../redux/actions\";\n\nconst Todo = ({ todo, toggleTodo }) => (\n  <li className=\"todo-item\" onClick={() => toggleTodo(todo.id)}>\n    {todo && todo.completed ? \"ðŸ‘Œ\" : \"ðŸ‘‹\"}{\" \"}\n    <span\n      className={cx(\n        \"todo-item__text\",\n        todo && todo.completed && \"todo-item__text--completed\"\n      )}\n    >\n      {todo.content}\n    </span>\n  </li>\n);\n\n// export default Todo;\nexport default connect(\n  null,\n  { toggleTodo }\n)(Todo);\n","import { VISIBILITY_FILTERS } from \"../constants\";\n\nexport const getTodosState = store => store.todos;\n\nexport const getTodoList = store =>\n  getTodosState(store) ? getTodosState(store).allIds : [];\n\nexport const getTodoById = (store, id) =>\n  getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\n\n/**\n * example of a slightly more complex selector\n * select from store combining information from multiple reducers\n */\nexport const getTodos = store =>\n  getTodoList(store).map(id => getTodoById(store, id));\n\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\n  const allTodos = getTodos(store);\n  switch (visibilityFilter) {\n    case VISIBILITY_FILTERS.COMPLETED:\n      return allTodos.filter(todo => todo.completed);\n    case VISIBILITY_FILTERS.INCOMPLETE:\n      return allTodos.filter(todo => !todo.completed);\n    case VISIBILITY_FILTERS.ALL:\n    default:\n      return allTodos;\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Todo from \"./Todo\";\n// import { getTodos } from \"../redux/selectors\";\nimport { getTodosByVisibilityFilter } from \"../redux/selectors\";\nimport { VISIBILITY_FILTERS } from \"../constants\";\n\nconst TodoList = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos && todos.length\n      ? todos.map((todo, index) => {\n          return <Todo key={`todo-${todo.id}`} todo={todo} />;\n        })\n      : \"No todos, yay!\"}\n  </ul>\n);\n\n// const mapStateToProps = state => {\n//   const { byIds, allIds } = state.todos || {};\n//   const todos =\n//     allIds && state.todos.allIds.length\n//       ? allIds.map(id => (byIds ? { ...byIds[id], id } : null))\n//       : null;\n//   return { todos };\n// };\n\nconst mapStateToProps = state => {\n  const { visibilityFilter } = state;\n  const todos = getTodosByVisibilityFilter(state, visibilityFilter);\n  return { todos };\n  //   const allTodos = getTodos(state);\n  //   return {\n  //     todos:\n  //       visibilityFilter === VISIBILITY_FILTERS.ALL\n  //         ? allTodos\n  //         : visibilityFilter === VISIBILITY_FILTERS.COMPLETED\n  //           ? allTodos.filter(todo => todo.completed)\n  //           : allTodos.filter(todo => !todo.completed)\n  //   };\n};\n// export default TodoList;\nexport default connect(mapStateToProps)(TodoList);\n","import React from \"react\";\nimport cx from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { setFilter } from \"../redux/actions\";\nimport { VISIBILITY_FILTERS } from \"../constants\";\n\nconst VisibilityFilters = ({ activeFilter, setFilter }) => {\n  return (\n    <div className=\"visibility-filters\">\n      {Object.keys(VISIBILITY_FILTERS).map(filterKey => {\n        const currentFilter = VISIBILITY_FILTERS[filterKey];\n        return (\n          <span\n            key={`visibility-filter-${currentFilter}`}\n            className={cx(\n              \"filter\",\n              currentFilter === activeFilter && \"filter--active\"\n            )}\n            onClick={() => {\n              setFilter(currentFilter);\n            }}\n          >\n            {currentFilter}\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { activeFilter: state.visibilityFilter };\n};\n// export default VisibilityFilters;\nexport default connect(\n  mapStateToProps,\n  { setFilter }\n)(VisibilityFilters);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport TodoApp from \"./TodoApp\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <TodoApp />\n  </Provider>,\n  rootElement\n);\n","import React from \"react\";\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport VisibilityFilters from \"./components/VisibilityFilters\";\nimport \"./styles.css\";\n\nexport default function TodoApp() {\n  return (\n    <div className=\"todo-app\">\n      <h1>Todo List</h1>\n      <AddTodo />\n      <TodoList />\n      <VisibilityFilters />\n    </div>\n  );\n}\n"],"sourceRoot":""}