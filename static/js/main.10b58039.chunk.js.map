{"version":3,"sources":["redux/reducers/todos.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","components/AddTodo.js","redux/actions.js","components/Todo.js","constants.js","redux/selectors.js","components/TodoList.js","components/VisibilityFilters.js","index.js","TodoApp.js"],"names":["initialState","allIds","byIds","combineReducers","todos","state","arguments","length","undefined","action","type","_action$payload","payload","id","content","Object","objectSpread","concat","toConsumableArray","defineProperty","completed","newState","filter","_id","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","AddTodo","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateInput","input","setState","handleAddTodo","e","preventDefault","trim","addTodo","_this2","react_default","a","createElement","onSubmit","onChange","target","value","className","React","Component","connect","uuid","toggleTodo","deleteTodo","_ref","todo","onClick","cx","VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","getTodosState","store","getTodos","getTodoList","map","getTodoById","ownProps","visibilityFilter","allTodos","getTodosByVisibilityFilter","index","components_Todo","keys","filterKey","currentFilter","react_router_dom","exact","to","activeClassName","createStore","composeWithDevTools","persistor","persistStore","_store","rootElement","document","getElementById","ReactDOM","render","es","integration_react","loading","react_router","path","component","params","match","components_AddTodo","components_TodoList","components_VisibilityFilters"],"mappings":"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","file":"static/js/main.10b58039.chunk.js","sourcesContent":["import { ADD_TODO, TOGGLE_TODO, DELETE_TODO } from \"../actionTypes\";\n\nconst initialState = {\n  allIds: [],\n  byIds: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      const { id, content } = action.payload;\n      return {\n        ...state,\n        allIds: [...state.allIds, id],\n        byIds: {\n          ...state.byIds,\n          [id]: {\n            content,\n            completed: false\n          }\n        }\n      };\n    }\n    case TOGGLE_TODO: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        byIds: {\n          ...state.byIds,\n          [id]: {\n            ...state.byIds[id],\n            completed: !state.byIds[id].completed\n          }\n        }\n      };\n    }\n    case DELETE_TODO: {\n      const { id } = action.payload;\n      const newState = {\n        ...state,\n        allIds: state.allIds.filter(_id => _id !== id)\n      };\n      delete newState.byIds[id];\n      return newState;\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport todos from \"./todos\";\n\nexport default combineReducers({ todos });\n","export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\n","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from \"./reducers\";\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport default () => {\n  let store = createStore(persistedReducer, composeWithDevTools())\n  let persistor = persistStore(store)\n  return { store, persistor }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../redux/actions\";\n\nclass AddTodo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { input: \"\" };\n  }\n\n  updateInput = input => {\n    this.setState({ input });\n  };\n\n  handleAddTodo = (e) => {\n    e.preventDefault();\n    const input = this.state.input.trim();\n    if (input) {\n      this.props.addTodo(input);\n      this.setState({ input: \"\" });\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleAddTodo}>\n        <input\n          onChange={e => this.updateInput(e.target.value)}\n          value={this.state.input}\n        />\n        <input type=\"submit\" className=\"add-todo\" value=\"Add Todo\" />\n      </form>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addTodo }\n)(AddTodo);\n// export default AddTodo;\n","import uuid from \"uuid/v4\";\nimport { ADD_TODO, TOGGLE_TODO, DELETE_TODO } from \"./actionTypes\";\n\nexport const addTodo = content => ({\n  type: ADD_TODO,\n  payload: {\n    id: uuid(),\n    content\n  }\n});\n\nexport const toggleTodo = id => ({\n  type: TOGGLE_TODO,\n  payload: { id }\n});\n\nexport const deleteTodo = id => ({\n  type: DELETE_TODO,\n  payload: { id }\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport cx from \"classnames\";\nimport { toggleTodo, deleteTodo } from \"../redux/actions\";\n\nconst Todo = ({ todo, toggleTodo, deleteTodo }) => (\n  <li className=\"todo-item\">\n    <span\n      onClick={() => toggleTodo(todo.id)}\n      className={cx(\n        \"todo-item__text\",\n        todo && todo.completed && \"todo-item__text--completed\"\n      )}\n    >\n      {todo && todo.completed ? \"ðŸ‘Œ\" : \"ðŸ‘‹\"}\n      {\" \"}\n      {todo.content}\n    </span>\n    {\" \"}\n    <span\n      onClick={() => deleteTodo(todo.id)}\n      className=\"todo-item__delete\"\n    >\n      [x]\n    </span>\n  </li>\n);\n\n// export default Todo;\nexport default connect(\n  null,\n  { toggleTodo, deleteTodo }\n)(Todo);\n","export const VISIBILITY_FILTERS = {\n  ALL: \"all\",\n  COMPLETED: \"completed\",\n  INCOMPLETE: \"incomplete\"\n};\n","import { VISIBILITY_FILTERS } from \"../constants\";\n\nexport const getTodosState = store => store.todos;\n\nexport const getTodoList = store =>\n  getTodosState(store) ? getTodosState(store).allIds : [];\n\nexport const getTodoById = (store, id) =>\n  getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\n\n/**\n * example of a slightly more complex selector\n * select from store combining information from multiple reducers\n */\nexport const getTodos = store =>\n  getTodoList(store).map(id => getTodoById(store, id));\n\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\n  const allTodos = getTodos(store);\n  switch (visibilityFilter) {\n    case VISIBILITY_FILTERS.COMPLETED:\n      return allTodos.filter(todo => todo.completed);\n    case VISIBILITY_FILTERS.INCOMPLETE:\n      return allTodos.filter(todo => !todo.completed);\n    case VISIBILITY_FILTERS.ALL:\n    default:\n      return allTodos;\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Todo from \"./Todo\";\nimport { getTodosByVisibilityFilter } from \"../redux/selectors\";\n\nconst TodoList = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos && todos.length\n      ? todos.map((todo, index) => {\n          return <Todo key={`todo-${todo.id}`} todo={todo} />;\n        })\n      : \"No todos, yay!\"}\n  </ul>\n);\n\nconst mapStateToProps = (state, ownProps) => {\n  const todos = getTodosByVisibilityFilter(state, ownProps.filter);\n  return { todos };\n};\n\nexport default connect(mapStateToProps)(TodoList);\n","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { VISIBILITY_FILTERS } from \"../constants\";\n\nconst VisibilityFilters = ({ filter: activeFilter }) => {\n  return (\n    <div className=\"visibility-filters\">\n      {Object.keys(VISIBILITY_FILTERS).map(filterKey => {\n        const currentFilter = VISIBILITY_FILTERS[filterKey];\n        return (\n          <NavLink\n            key={`visibility-filter-${currentFilter}`}\n            exact\n            to={currentFilter === VISIBILITY_FILTERS.ALL ? '/' : `/${currentFilter}`}\n            className=\"filter\"\n            activeClassName=\"filter--active\"\n          >\n            {currentFilter}\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n\n// export default VisibilityFilters;\nexport default connect()(VisibilityFilters);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { Provider } from \"react-redux\";\nimport _store from \"./redux/store\";\n\nimport TodoApp from \"./TodoApp\";\n\nconst { store, persistor } = _store()\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router>\n        <Route path=\"/:filter?\" component={TodoApp} />\n      </Router>\n    </PersistGate>\n  </Provider>,\n  rootElement\n);\n","import React from \"react\";\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport VisibilityFilters from \"./components/VisibilityFilters\";\nimport { VISIBILITY_FILTERS } from \"./constants\";\nimport \"./styles.css\";\n\nexport default function TodoApp({ match: { params } }) {\n  return (\n    <div className=\"todo-app\">\n      <h1>Todo List</h1>\n      <AddTodo />\n      <TodoList filter={params.filter || VISIBILITY_FILTERS.ALL} />\n      <VisibilityFilters filter={params.filter || VISIBILITY_FILTERS.ALL} />\n    </div>\n  );\n}\n"],"sourceRoot":""}