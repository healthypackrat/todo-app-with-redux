{"version":3,"sources":["constants.js","redux/reducers/visibilityFilter.js","redux/actionTypes.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","components/AddTodo.js","redux/actions.js","components/Todo.js","redux/selectors.js","components/TodoList.js","components/VisibilityFilters.js","index.js","TodoApp.js"],"names":["VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","initialState","visibilityFilter","state","arguments","length","undefined","action","type","payload","filter","allIds","byIds","combineReducers","todos","_action$payload","id","content","Object","objectSpread","concat","toConsumableArray","defineProperty","completed","newState","_id","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","AddTodo","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateInput","input","setState","handleAddTodo","e","preventDefault","trim","addTodo","_this2","react_default","a","createElement","onSubmit","onChange","target","value","className","React","Component","connect","uuid","toggleTodo","deleteTodo","_ref","todo","onClick","cx","getTodosState","store","getTodos","getTodoList","map","getTodoById","ownProps","allTodos","getTodosByVisibilityFilter","index","components_Todo","keys","filterKey","currentFilter","react_router_dom","exact","to","activeClassName","createStore","composeWithDevTools","persistor","persistStore","_store","rootElement","document","getElementById","ReactDOM","render","es","integration_react","loading","react_router","path","component","params","match","components_AddTodo","components_TodoList","components_VisibilityFilters"],"mappings":"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","file":"static/js/main.27fb7662.chunk.js","sourcesContent":["export const VISIBILITY_FILTERS = {\n  ALL: \"all\",\n  COMPLETED: \"completed\",\n  INCOMPLETE: \"incomplete\"\n};\n","import { SET_FILTER } from \"../actionTypes\";\nimport { VISIBILITY_FILTERS } from \"../../constants\";\n\nconst initialState = VISIBILITY_FILTERS.ALL;\n\nconst visibilityFilter = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTER: {\n      return action.payload.filter;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default visibilityFilter;\n","export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const SET_FILTER = \"SET_FILTER\";\n","import { ADD_TODO, TOGGLE_TODO, DELETE_TODO } from \"../actionTypes\";\n\nconst initialState = {\n  allIds: [],\n  byIds: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      const { id, content } = action.payload;\n      return {\n        ...state,\n        allIds: [...state.allIds, id],\n        byIds: {\n          ...state.byIds,\n          [id]: {\n            content,\n            completed: false\n          }\n        }\n      };\n    }\n    case TOGGLE_TODO: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        byIds: {\n          ...state.byIds,\n          [id]: {\n            ...state.byIds[id],\n            completed: !state.byIds[id].completed\n          }\n        }\n      };\n    }\n    case DELETE_TODO: {\n      const { id } = action.payload;\n      const newState = {\n        ...state,\n        allIds: state.allIds.filter(_id => _id !== id),\n        byIds: {\n          ...state.byIds\n        }\n      };\n      delete newState.byIds[id];\n      return newState;\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport visibilityFilter from \"./visibilityFilter\";\nimport todos from \"./todos\";\n\nexport default combineReducers({ todos, visibilityFilter });\n","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from \"./reducers\";\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport default () => {\n  let store = createStore(persistedReducer, composeWithDevTools())\n  let persistor = persistStore(store)\n  return { store, persistor }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../redux/actions\";\n\nclass AddTodo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { input: \"\" };\n  }\n\n  updateInput = input => {\n    this.setState({ input });\n  };\n\n  handleAddTodo = (e) => {\n    e.preventDefault();\n    const input = this.state.input.trim();\n    if (input) {\n      this.props.addTodo(input);\n      this.setState({ input: \"\" });\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleAddTodo}>\n        <input\n          onChange={e => this.updateInput(e.target.value)}\n          value={this.state.input}\n        />\n        <input type=\"submit\" className=\"add-todo\" value=\"Add Todo\" />\n      </form>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addTodo }\n)(AddTodo);\n// export default AddTodo;\n","import uuid from \"uuid/v4\";\nimport { ADD_TODO, TOGGLE_TODO, DELETE_TODO, SET_FILTER } from \"./actionTypes\";\n\nexport const addTodo = content => ({\n  type: ADD_TODO,\n  payload: {\n    id: uuid(),\n    content\n  }\n});\n\nexport const toggleTodo = id => ({\n  type: TOGGLE_TODO,\n  payload: { id }\n});\n\nexport const deleteTodo = id => ({\n  type: DELETE_TODO,\n  payload: { id }\n});\n\nexport const setFilter = filter => ({ type: SET_FILTER, payload: { filter } });\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport cx from \"classnames\";\nimport { toggleTodo, deleteTodo } from \"../redux/actions\";\n\nconst Todo = ({ todo, toggleTodo, deleteTodo }) => (\n  <li className=\"todo-item\">\n    <span\n      onClick={() => toggleTodo(todo.id)}\n      className={cx(\n        \"todo-item__text\",\n        todo && todo.completed && \"todo-item__text--completed\"\n      )}\n    >\n      {todo && todo.completed ? \"👌\" : \"👋\"}\n      {\" \"}\n      {todo.content}\n    </span>\n    {\" \"}\n    <span\n      onClick={() => deleteTodo(todo.id)}\n      className=\"todo-item__delete\"\n    >\n      [x]\n    </span>\n  </li>\n);\n\n// export default Todo;\nexport default connect(\n  null,\n  { toggleTodo, deleteTodo }\n)(Todo);\n","import { VISIBILITY_FILTERS } from \"../constants\";\n\nexport const getTodosState = store => store.todos;\n\nexport const getTodoList = store =>\n  getTodosState(store) ? getTodosState(store).allIds : [];\n\nexport const getTodoById = (store, id) =>\n  getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\n\n/**\n * example of a slightly more complex selector\n * select from store combining information from multiple reducers\n */\nexport const getTodos = store =>\n  getTodoList(store).map(id => getTodoById(store, id));\n\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\n  const allTodos = getTodos(store);\n  switch (visibilityFilter) {\n    case VISIBILITY_FILTERS.COMPLETED:\n      return allTodos.filter(todo => todo.completed);\n    case VISIBILITY_FILTERS.INCOMPLETE:\n      return allTodos.filter(todo => !todo.completed);\n    case VISIBILITY_FILTERS.ALL:\n    default:\n      return allTodos;\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Todo from \"./Todo\";\nimport { getTodosByVisibilityFilter } from \"../redux/selectors\";\n\nconst TodoList = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos && todos.length\n      ? todos.map((todo, index) => {\n          return <Todo key={`todo-${todo.id}`} todo={todo} />;\n        })\n      : \"No todos, yay!\"}\n  </ul>\n);\n\nconst mapStateToProps = (state, ownProps) => {\n  const todos = getTodosByVisibilityFilter(state, ownProps.filter);\n  return { todos };\n};\n\nexport default connect(mapStateToProps)(TodoList);\n","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { VISIBILITY_FILTERS } from \"../constants\";\n\nconst VisibilityFilters = ({ filter: activeFilter }) => {\n  return (\n    <div className=\"visibility-filters\">\n      {Object.keys(VISIBILITY_FILTERS).map(filterKey => {\n        const currentFilter = VISIBILITY_FILTERS[filterKey];\n        return (\n          <NavLink\n            key={`visibility-filter-${currentFilter}`}\n            exact\n            to={currentFilter === VISIBILITY_FILTERS.ALL ? '/' : `/${currentFilter}`}\n            className=\"filter\"\n            activeClassName=\"filter--active\"\n          >\n            {currentFilter}\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n\n// export default VisibilityFilters;\nexport default connect()(VisibilityFilters);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { Provider } from \"react-redux\";\nimport _store from \"./redux/store\";\n\nimport TodoApp from \"./TodoApp\";\n\nconst { store, persistor } = _store()\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router>\n        <Route path=\"/:filter?\" component={TodoApp} />\n      </Router>\n    </PersistGate>\n  </Provider>,\n  rootElement\n);\n","import React from \"react\";\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport VisibilityFilters from \"./components/VisibilityFilters\";\nimport { VISIBILITY_FILTERS } from \"./constants\";\nimport \"./styles.css\";\n\nexport default function TodoApp({ match: { params } }) {\n  return (\n    <div className=\"todo-app\">\n      <h1>Todo List</h1>\n      <AddTodo />\n      <TodoList filter={params.filter || VISIBILITY_FILTERS.ALL} />\n      <VisibilityFilters filter={params.filter || VISIBILITY_FILTERS.ALL} />\n    </div>\n  );\n}\n"],"sourceRoot":""}